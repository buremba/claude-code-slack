apiVersion: skaffold/v4beta6
kind: Config
metadata:
  name: claude-code-slack
build:
  artifacts:
  - image: peerbot-dispatcher
    context: .
    docker:
      dockerfile: Dockerfile.dispatcher
  - image: claude-worker
    context: .
    docker:
      dockerfile: Dockerfile.worker
  - image: claude-operator
    context: .
    docker:
      dockerfile: Dockerfile.operator
  local:
    push: false
    useBuildkit: true
deploy:
  helm:
    releases:
    - name: peerbot
      chartPath: charts/peerbot
      namespace: peerbot
      createNamespace: true
      skipBuildDependencies: true
      valuesFiles:
      - charts/peerbot/values-local.yaml
      setValueTemplates:
        dispatcher.image.repository: peerbot-dispatcher
        dispatcher.image.tag: "{{.IMAGE_TAG_peerbot_dispatcher}}"
        worker.image.repository: claude-worker
        worker.image.tag: "{{.IMAGE_TAG_claude_worker}}"
        operator.image.repository: claude-operator
        operator.image.tag: "{{.IMAGE_TAG_claude_operator}}"
      setValues:
        dispatcher.socketMode: "true"
        dispatcher.httpMode: "false"
        ingress.enabled: "false"
        service.type: ClusterIP
portForward:
- resourceType: deployment
  resourceName: peerbot-dispatcher
  namespace: peerbot
  port: 3000
  localPort: 3000

# Development profiles
profiles:
- name: with-operator
  deploy:
    helm:
      releases:
      - name: peerbot
        chartPath: charts/peerbot
        namespace: peerbot
        createNamespace: true
        skipBuildDependencies: true
        valuesFiles:
        - charts/peerbot/values-local.yaml
        setValueTemplates:
          dispatcher.image.repository: peerbot-dispatcher
          dispatcher.image.tag: "{{.IMAGE_TAG_peerbot_dispatcher}}"
          worker.image.repository: claude-worker
          worker.image.tag: "{{.IMAGE_TAG_claude_worker}}"
          operator.image.repository: claude-operator
          operator.image.tag: "{{.IMAGE_TAG_claude_operator}}"
        setValues:
          dispatcher.socketMode: "true"
          dispatcher.httpMode: "false"
          ingress.enabled: "false"
          service.type: ClusterIP
          operator.enabled: "true"
          dispatcher.useOperator: "true"